[tool.poetry]
name = "reflective-learning-agent"
version = "0.1.0"
description = "AI Agent for guided reflection using LangGraph and LLMs"
authors = ["Your Name <you@example.com>"] # Placeholder - Please update!
license = "MIT"
readme = "README.md"
packages = [{include = "app", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.13" # Specify upper bound for better dependency resolution
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.4"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.5"  # For async test functions
httpx = "^0.27.0" # For async API testing

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a few common directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) rules by default.
# Rule selector reference: https://docs.astral.sh/ruff/rules/
select = ["E4", "E7", "E9", "F", "I", "W"] # Minimal useful set + imports (I)
ignore = []

# Allow unused variables when underscore-prefixed.
# dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Allow autofix for all enabled rules (when `--fix`) is provided.
# fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
# unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
pythonpath = ["src"] 